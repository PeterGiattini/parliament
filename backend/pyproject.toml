[project]
name = "parliament-backend"
version = "0.1.0"
description = "Parliament debate backend API"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.116.1",
    "google-cloud-aiplatform>=1.108.0",
    "langchain>=0.3.27",
    "langchain-google-vertexai>=2.0.28",
    "langchain-tavily>=0.2.11",
    "langgraph>=0.6.4",
    "pydantic>=2.11.7",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
    "uvicorn[standard]>=0.35.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "ruff>=0.1.0",
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
]

[tool.hatch.build.targets.wheel]
packages = ["."] 

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",  # no-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "COM812",  # missing-trailing-comma
    "S101",  # assert statements (fine in tests)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",  # assert statements
    "ANN201",  # missing return type annotations
    "ANN001",  # missing type annotations for function arguments
    "PLR2004",  # magic numbers (common in tests)
    "E501",  # line too long (allow longer lines in tests)
    "D100",  # missing docstring in public module
    "D101",  # missing docstring in public class
    "D102",  # missing docstring in public method
    "D103",  # missing docstring in public function
    "D107",  # missing docstring in __init__
    "ARG001",  # unused function argument (common in test fixtures)
    "ARG002",  # unused method argument (common in test mocks)
    "ANN401",  # dynamically typed expressions (common in test mocks)
    "PT011",  # pytest.raises too broad (tests often use broad exceptions)
    "ERA001",  # commented-out code (useful calculation comments in tests)
    "SLF001",  # private member access (fine in tests)
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
